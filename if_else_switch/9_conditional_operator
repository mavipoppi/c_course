Unlike all other operators in C (which are unary or binary), the conditional operator is a ternary operator - it takes three operands. The two symbols that are used to denote this operator are '?' and ':'. The first operand is placed before the '?', thesecond between the '?' and ':' and the third after ':'. The general format of the conditional operator is

condition ? expression1 : expression2

where condition is an expression, usually a relational expression, that is evaluated first whenever the conditional operator is encountered. If the result of the evaluation of condition is TRUE, the expression1 is evaluated and the result of the evaluation becomes the result of the operation. If condition evaluates FALSE, then expression2 is evaluated and its result becomes the result of the operation. 

The conditional operator is most often used to assign one of two values to a variable depending upon some condition. For example, suppose you have an integer variable x and another integer variable s. If you want to assign –1 to s if x were less than zero, and the value of x2 to s otherwise, the following statement could be written:

s = ( x < 0 ) ? -1 : x * x;

The condition x < 0 is first tested when the preceding statement is executed. If the value of x is less than zero, the expression immediately following the ? is evaluated. The expression is simply the constant integer value -1, which is assigned to the variable s if x is less than zero. 

If the value of x is not less than zero, the expression immediately following the : is evaluated and assigned to s. So, if x is greater than or equal to zero, the value of x * x is assigned to s. 

As another example of the use of the conditional operatr, the following statement assigns to the variable maxValue the maximum of a and b:

maxValue = ( a > b ) ? a : b;


If the expression that is used after the : (the “else” part) consists of another conditional operator, you can achieve the effects of an “else if ” clause. For  example, the sign function that was implemented in Program 8 can be written in one program line using two conditional operators as follows:

sign = (number < 0) ? -1 : ((number == 0) ? 0 : 1);

If number is less than zero, sign is assigned the value –1; else if number is equal to zero, sign is assigned the value 0; else it is assigned the value 1.

You could display the sign of the variable number, without first assigning it to a variable, using a printf statement as shown:

printf ("Sign = %i\n", ( number < 0 ) ? –1 : ( number == 0 ) ? 0 : 1);